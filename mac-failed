#!/usr/bin/env zsh
### end common-components/zsh-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

fancy_echo() {
  printf "\n%b\n" "$1"
}

function installcask() {
  brew cask install "${@}" 2> /dev/null
}

function brewin() {
  brew install "${@}" 2> /dev/null
}
### end common-components/shared-functions

fancy_echo "Installing rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries..."
  brewin rbenv-gem-rehash

fancy_echo "Installing ruby-build, to install Rubies ..."
  brewin ruby-build

fancy_echo "Installing rbenv-ctags"
  mkdir -p ~/.rbenv/plugins
  git clone https://github.com/tpope/rbenv-ctags.git ~/.rbenv/plugins/rbenv-ctags

fancy_echo "Installing rbenv-update, a plugin manager"
  git clone https://github.com/rkh/rbenv-update.git ~/.rbenv/plugins/rbenv-update
### end mac-components/rbenv-plugins

fancy_echo "Installing go"
  brewin go

fancy_echo "Installing Elixir, a functional programming language"
  brewin erlang
  brewin elixir
### end mac-components/languages

fancy_echo "Installing Ruby 2.0.0-p247 ..."
  rbenv install 2.0.0-p247

fancy_echo "Installing Ruby 1.9.3"
  rbenv install 1.9.3-p448

# Currently fails to compile on Mavericks
#fancy_echo "Installing Rubinius 2.0.0"
  #rbenv install rbx-2.1.1

fancy_echo "Setting Ruby 2.0.0-p247 as global default Ruby ..."
  rbenv global 2.0.0-p247
  rbenv rehash

fancy_echo "Updating to latest Rubygems version ..."
  gem update --system

fancy_echo "Installing critical Ruby gems for Rails development ..."
  gem install bundler gem-ctags teamocil rails jazz_hands
### end common-components/ruby-environment

fancy_echo "Installing Heroku CLI client ..."
  brew install heroku-toolbelt

fancy_echo "Installing the heroku-config plugin to pull config variables locally to be used as ENV variables ..."
  heroku plugins:install git://github.com/ddollar/heroku-config.git
### end mac-components/heroku

fancy_echo "Installing essential NPM packages - Grunt, Yeoman, and Bower, because you need them ..."
  npm install -g coffee-script grunt-cli npm-check-updates jasmine jsonlint
### end mac-components/npm-environment

export HOMEBREW_CASK_OPTS=--appdir=/Applications

fancy_echo "Tapping into homebrew-cask"
  brew tap phinze/homebrew-cask
  brewin brew-cask
  brew update


fancy_echo "Installing Dropbox"
  installcask dropbox

fancy_echo "Installing PCKeyboardHack & KeyRemap4Macbook to remap keys"
  installcask pc-keyboardhack
  installcask keyremap4macbook

fancy_echo "Installing iTerm2, a better terminal experience"
  installcask iterm2

fancy_echo "Installing Alfred"
  installcask alfred

fancy_echo "Installing Google Chrome"
  installcask google-chrome

fancy_echo "Installing Airmail, for all the mailz"
  installcask airmail-beta

fancy_echo "Installing Bartender to wrangle the menubar"
  installcask bartender

fancy_echo "Installing Postgres.app"
  installcask postgres

fancy_echo "Installing Vagrant to manage dev environments"
  installcask vagrant

fancy_echo "Installing CloudApp"
  installcask cloudapp

fancy_echo "Installing AppDelete"
  installcask app-delete

fancy_echo "Installing Doxie drivers"
  installcask doxie

fancy_echo "Installing Evernote for notes"
  installcask evernote

fancy_echo "Installing Google Hangouts"
  installcask google-hangouts

fancy_echo "Installing Instacast, a podcast manager"
  installcask instacast

fancy_echo "Installing Racket"
  installcask racket

fancy_echo "Installing Rdio"
  installcask rdio

fancy_echo "Installing Skype"
  installcask skype

fancy_echo "Installing Sourcetree"
  installcask sourcetree

fancy_echo "Installing Sublime Text 3"
  installcask sublime-text-3

fancy_echo "Installing The Unarchiver"
  installcask the-unarchiver

fancy_echo "Installing TrueCrypt"
  installcask true-crypt

fancy_echo "Installing Inboard, a screenshot manager"
  installcask inboard

### end mac-components/homebrew-cask

fancy_echo "Downloading Projects"
  git clone git@github.com:NanoXD/boxylib.git ~/Developer/Projects/boxylib
  git clone git@github.com:NanoXD/eulerb.git ~/Developer/Projects/eulerb
  git clone git@github.com:NanoXD/fdpio.git ~/Developer/Projects/fdpio
  git clone git@github.com:NanoXD/homebrew-cask.git ~/Developer/Projects/homebrew-cask
  git clone git@github.com:NanoXD/mega_projects_rb.git ~/Developer/Projects/mega_projects_rb
  git clone git@github.com:NanoXD/octopress.git ~/Developer/Projects/blog
  git clone git@github.com:SeaRbSg/realm_of_racket.git ~/Developer/Projects/realm_of_racket
  git clone git@github.com:NanoXD/Reddit-Daily-Programmer.git ~/Developer/Projects/Reddit-Daily-Programmer

fancy_echo "Downloading Automation Scripts"
  git clone git@github.com:NanoXD/laptop.git ~/Developer/Projects/laptop

fancy_echo "Installing VMWare Fusion plugin for vagrant"
  vagrant plugin install vagrant-vmware-fusion

fancy_echo "Installing Vagrant Digital Ocean provider"
  vagrant plugin install vagrant-digitalocean

fancy_echo "Installing Vagrant pristine plugin"
  vagrant plugin install vagrant-pristine
### end common-components/projects

fancy_echo "Select a name for your computer:"
  read comp_name
  sudo scutil --set ComputerName "$comp_name"
  sudo scutil --set HostName "$comp_name"
  sudo scutil --set LocalHostName "$comp_name"
  sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$comp_name"

fancy_echo "Enable access for assistive devices"
  sudo touch /private/var/db/.AccessibilityAPIEnabled

fancy_echo "Expand save panel by default"
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true

fancy_echo "Save to disk (not to iCloud) by default"
  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

fancy_echo "Disable the 'Are you sure you want to open this application?' dialog"
  defaults write com.apple.LaunchServices LSQuarantine -bool false

fancy_echo "Trackpad: enable tap to click for this user and for the login screen"
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

fancy_echo "Increase sound quality for Bluetooth headphones/headsets"
  defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

fancy_echo "Enable full keyboard access for all controls"
  defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

fancy_echo "Set a blazingly fast keyboard repeat rate"
  defaults write NSGlobalDomain KeyRepeat -int 0

fancy_echo "Enable subpixel font rendering on non-Apple LCDs"
  defaults write NSGlobalDomain AppleFontSmoothing -int 2

fancy_echo "Show icons for hard drives, servers, and removable media on the desktop"
  defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
  defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
  defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
  defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

fancy_echo "Finder: allow text selection in Quick Look"
  defaults write com.apple.finder QLEnableTextSelection -bool true

fancy_echo "Avoid creating .DS_Store files on network volumes"
  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

fancy_echo "Empty Trash securely by default"
  defaults write com.apple.finder EmptyTrashSecurely -bool true

fancy_echo "Set the icon size of Dock items to 36 pixels"
  defaults write com.apple.dock tilesize -int 36

fancy_echo "Automatically hide and show the Dock"
  defaults write com.apple.dock autohide -bool true

fancy_echo "Set Safari’s home page to `about:blank` for faster loading"
  defaults write com.apple.Safari HomePage -string "about:blank"

fancy_echo "Enable Safari’s debug menu"
  defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

fancy_echo "Make Safari’s search banners default to Contains instead of Starts With"
  defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false

fancy_echo "Enable the Develop menu and the Web Inspector in Safari"
  defaults write com.apple.Safari IncludeDevelopMenu -bool true
  defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
  defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

fancy_echo "Add a context menu item for showing the Web Inspector in web views"
  defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

fancy_echo "Adding default login message"
  defaults write com.apple.loginwindow.plist "LoginwindowText" -string "Property of Fernando Paredes - 831 521 2943 - nano@fdp.io"

fancy_echo "Killing Affected applications"
  for app in "Address Book" "Calendar" "Contacts" "Dock" "Finder" \
    "Mail" "Safari"  "SystemUIServer" "iCal"; do
    killall "$app" > /dev/null 2>&1
  done

fancy_echo "Done. Note that some of these changes require a logout/restart to take effect."

### end mac-components/default-settings

